public class Solution {
    public ArrayList<Integer> solve(ArrayList<Integer> A) {
        int xor_all = 0;
        int N = A.size();
        for(int i = 0; i < N; ++i) {
            xor_all ^= A.get(i);
        }
        int pos = 0;
        while(pos <= 30) {
            if(checkBitSet(xor_all, pos)) {
                break;
            }
            pos++;
        }
        int set = 0, unset = 0;
        for(int i = 0; i < N; ++i) {
            if(checkBitSet(A.get(i), pos)) {
                set ^= A.get(i);
            }
            else {
                unset ^= A.get(i);
            }
        }
        ArrayList<Integer> unique = new ArrayList<>(2);
        unique.add(Math.min(set, unset));
        unique.add(Math.max(set, unset));
        return unique;
    }
    static boolean checkBitSet(int n, int p) {
        return (((n >> p) & 1) == 1);
    }
}
