A01 :-
----------
Which of the following is not bounded by O(n^2)?

Ans : n^3/(sqrt(n))


A02 :-
----------
What does it mean when we say that an algorithm X is asymptotically more efficient than Y?

Ans : X will always be a better choice for large inputs


A03 :-
----------
An algorithm consists of two independent piece of code, having complexities f(n) and g(n) respectively. What would be the complexity of the complete algorithm

Ans : Max(f(n), g(n))


A04 :-
----------
    int i, j, k = 0;
    for (i  = n/2; i <= n; i++) {
        for (j = 2; j <= n; j = j * 2) {
            k = k + n/2;
        }
    }
  
Ans : &Theta;(nLogn)


A05 :-
---------
    int a = 0, b = 0;    
    for (i = 0; i < N; i++) {
        for (j = 0; j < N; j++) {
            a = a + j;
        }
    }
    for (k = 0; k < N; k++) {
        b = b + k;
    }
    
Ans : O(N * N) time, O(1) space


A06 :-
----------
        int a = 0, b = 0;    
        for (i = 0; i < N; i++) {
            a = a + rand();  
        }
        for (j = 0; j < M; j++) {
            b = b + rand();
        }
      
Ans : O(N + M) time, O(1) space
