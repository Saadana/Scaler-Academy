public class Solution {
    public ArrayList<Integer> solve(ArrayList<Integer> A) {
        int n = A.size();
        ArrayList<Integer> leaders = new ArrayList<>();
        leaders.add(A.get(n-1));
        int maxFromRight = A.get(n-1);
        for(int i = n-2; i >= 0; --i) {
            if(A.get(i) > maxFromRight) {
                maxFromRight = A.get(i);
                leaders.add(maxFromRight);
            }
        }
        return leaders;
    }
}



############################################################################

public class Solution {
    public ArrayList<Integer> solve(ArrayList<Integer> A) {
        int n = A.size();
        ArrayList<Integer> leaders = new ArrayList<>();
        for(int i = 0, j; i < n-1; ++i) {
            int val = A.get(i);
            for(j = i+1; j < n; ++j) {
                if(val <= A.get(j)) {
                    break;
                }
            }
            if(j == n) {
                leaders.add(val);
            }
        }
        leaders.add(A.get(n-1));
        return leaders;
    }
}
